# Link : https://flask.palletsprojects.com/en/1.1.x/quickstart/

# https://www.digitalocean.com/community/tutorials/how-to-deploy-a-flask-application-on-an-ubuntu-vps

# installation
sudo apt-get install libapache2-mod-wsgi python-dev
sudo a2enmod wsgi 
sudo install mpc mpd

****** Flask is a Python class.
It makes handling web pages through templates with python GET, POST methods possible. 

ex (no template) :
	from flask import Flask
	app = Flask(__name__)

	@app.route('/')
	def hello_world():
    		return 'Hello, World!'

In web browser,enter http://localhost:5000/, we get "Hello, world!" as a index web page.

Running this then we get :
Running the app with options chosen by Thonny. See Help for details.
 * Serving Flask app "flask_test_page" (lazy loading)
 * Environment: development
 * Debug mode: off
 * Running on http://127.0.0.1:1234/ (Press CTRL+C to quit)

# Flask installation
# pip install Flask

# serveur Radio Flask : dans /var/www/flask_dev 

flask_dev
   |_flask_dev
     |_ static
          |_ styles.css
     |_ templates
     |    |_ interface.html
     |_ radio.py
     |_ stations2.txt
     |_ predefines.py


1 - les fichiers sont installés dans /var/www/flask_desk
2 - cd /var/www/flask_desk

pi@raspberrypi:/var/www/flask_dev $ ls
predefines.py  __pycache__  radio.py  stations.txt  templates

3 - Lancer le serveur dans le terminal :
pi@raspberrypi:/var/www/flask_dev $ sudo python radio.py
 * Serving Flask app "radio" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
 * Running on http://0.0.0.0:1234/ (Press CTRL+C to quit)
 * Restarting with stat
 * Debugger is active!
 * Debugger PIN: 147-809-869

3 - Lancer dans Chromium : 192.168.1.61:1234

4 - CTRL-C pour arrêter le serveur
==========================================================================
# commandes inline

mpc add http://icecast.omroep.nl/radio1-sb-mp3

mpc play

mpc stop

mpc clear
==========================================================================

 mpc help
Usage: mpc [options] <command> [<arguments>]
mpc version: 0.31

Options:
  -v, --verbose                   Give verbose output
  -q, --quiet                     Suppress status message
  -q, --no-status                 synonym for --quiet
  -h, --host=<host>               Connect to server on <host>
  -P, --password=<password>       Connect to server using password <password>
  -p, --port=<port>               Connect to server port <port>
  -f, --format=<format>           Print status with format <format>
  -w, --wait                      Wait for operation to finish (e.g. database update)
  -r, --range=[<start>]:[<end>]   Operate on a range (e.g. when loading a playlist)

Commands:
  mpc                                                   Display status
  mpc add <uri>                                         Add a song to the queue
  mpc crop                                              Remove all but the currently playing song
  mpc current                                           Show the currently playing song
  mpc del <position>                                    Remove a song from the queue
  mpc play [<position>]                                 Start playing at <position>
  mpc next                                              Play the next song in the queue
  mpc prev                                              Play the previous song in the queue
  mpc pause                                             Pauses the currently playing song
  mpc pause-if-playing                                  Pauses the currently playing song; exits with failure if not playing
  mpc toggle                                            Toggles Play/Pause, plays if stopped
  mpc cdprev                                            Compact disk player-like previous command
  mpc stop                                              Stop playback
  mpc seek [+-][HH:MM:SS]|<0-100>%                      Seeks to the specified position
  mpc seekthrough [+-][HH:MM:SS]                        Seeks by an amount of time within the song and playlist
  mpc clear                                             Clear the queue
  mpc outputs                                           Show the current outputs
  mpc enable [only] <output # or name> [...]            Enable output(s)
  mpc disable [only] <output # or name> [...]           Disable output(s)
  mpc toggleoutput <output # or name> [...]             Toggle output(s)
  mpc queued                                            Show the next queued song
  mpc shuffle                                           Shuffle the queue
  mpc move <from> <to>                                  Move song in queue
  mpc playlist [<playlist>]                             Print <playlist>
  mpc listall [<file>]                                  List all songs in the music dir
  mpc ls [<directory>]                                  List the contents of <directory>
  mpc lsplaylists                                       List currently available playlists
  mpc load <file>                                       Load <file> into the queue
  mpc insert <uri>                                      Insert a song to the queue after the current track
  mpc prio <prio> <position/range> ...                  Change song priorities in the queue
  mpc save <file>                                       Save a queue as <file>
  mpc rm <file>                                         Remove a playlist
  mpc volume [+-]<num>                                  Set volume to <num> or adjusts by [+-]<num>
  mpc repeat <on|off>                                   Toggle repeat mode, or specify state
  mpc random <on|off>                                   Toggle random mode, or specify state
  mpc single <on|off>                                   Toggle single mode, or specify state
  mpc consume <on|off>                                  Toggle consume mode, or specify state
  mpc search <type> <query>                             Search for a song
  mpc searchadd <type> <query>                          Search songs and add them to the queue
  mpc find <type> <query>                               Find a song (exact match)
  mpc findadd <type> <query>                            Find songs and add them to the queue
  mpc searchplay <pattern>                              Find and play a song in the queue
  mpc list <type> [<type> <query>]                      Show all tags of <type>
  mpc crossfade [<seconds>]                             Set and display crossfade settings
  mpc clearerror                                        Clear the current error
  mpc mixrampdb [<dB>]                                  Set and display mixrampdb settings
  mpc mixrampdelay [<seconds>]                          Set and display mixrampdelay settings
  mpc update [<path>]                                   Scan music directory for updates
  mpc rescan [<path>]                                   Rescan music directory (including unchanged files)
  mpc sticker <uri> <get|set|list|delete|find> [args..] Sticker management
  mpc stats                                             Display statistics about MPD
  mpc version                                           Report version of MPD
  mpc idle [events]                                     Idle until an event occurs
  mpc idleloop [events]                                 Continuously idle until an event occurs
  mpc replaygain [off|track|album]                      Set or display the replay gain mode
  mpc channels                                          List the channels that other clients have subscribed to.
  mpc sendmessage <channel> <message>                   Send a message to the specified channel.
  mpc waitmessage <channel>                             Wait for at least one message on the specified channel.
  mpc subscribe <channel>                               Subscribe to the specified channel and continuously receive messages.

See man 1 mpc for more information about mpc commands and options
